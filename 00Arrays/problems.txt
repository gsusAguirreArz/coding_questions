/*

Name: Four Number Sum

Difficulty: Hard Red

Write a function that takes in a non empty array of disctinct integers and an integer represinting a target sum. The function should find all quadruplets in the array that sum up to the targetr sum and return a two dimensional array of all these quadruplets in no particular order.

If no four numbers sum up to the target sum, the function should return an empty array.

INPUT
array = [7, 6 ,4 ,-1, 1, 2]
targetSum = 16

OUTPUT
[[7, 6, 4, -1], [7, 6, 1, 2]] // the quadruplets could be ordered differently

*/

/*

Name: Subarray Sort

Difficulty: Hard Red

Write a function that takes in an array of at least two integers and that returns an array of the starting and ending indices of the smllest subarray in the input array that needs to be sorted in place in order for the entire input arrayy to be sorted (in ascending order).

If the input array is already sorted, the function should return [-1,-1].

INPUT
array = [1, 2, 4, 7, 10, 11, 7, 12, 6, 7, 16, 18, 19]

OUTPUT
[3,9]

*/

/*

Name: Largest Range

Difficulty: Hard Red

Write a function that takes in an array of integers and returns an array of length 2 representing the largest range of integers contained in that array.

The first number in the ourpur array should be the first number in the range, while the second number should be the last number in the range.

A range of numbers is defined as a set of numebrs that come right adter each other in the set of real integers. For instance, the output array[2,6] represents the range {2,3,4,5,6}, which is a range of length 5. Note that numbers dont need to be sorte or adjacen in the input array in order to form a range.

You can assume that there will only be one largest range.

INPUT
array = [1, 11, 3, 0, 15, 5, 2, 4, 10, 7, 12, 6]

OUTPUT
[0,7]

*/

/*

Name: Min Rewards

Difficulty: Hard Red

IMagine that youre a teacher whos just graded the final exam in a class. You have a list of student scores on the final exam in a particular order (not necessarily sorted), and you want to reward your students. YOu decide to do so fairly by giving them arbitrary rewards following two rules.
    1. ALl students must receive at least one reward.
    2. Any given student must reveive strictly more rewards than an adjacent student (a student immediately to the left or to the right) with a lower score and must receive strictly fewer rewards than an adjacent student with a higher score.

Write a function that takes in a list of scores and returns the minimum number of rewards that you must give out o students to satisfy the two rules.

You can assume that all students have different scoresl in other words, the scores are all unique.

INPUT
array = [8, 4, 2, 1, 3, 6, 7, 9, 5]

OUTPUT
25 // your would give out the following rewards: [4, 3, 2, 1, 2, 3, 4, 5, 1]

*/

/*

Name: Zigzag Traverse

Difficulty: Hard Red

Write a function that takes in an n x m two dimensional array (that can be square-shaped when n==m) and return a one-dimensional array of all the array elements in zigzag order.

Zigzag order starts at the top left corner of the two dimensional array, goes down by one, and proceeds in a zigzag pattern all the way to the bottom right corner.

INPUT
array = [
    [1,  3,  4, 10],
    [2,  5,  9, 11],
    [6,  8, 12, 15],
    [7, 13, 14, 16]
]

OUTPUT
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]

*/

/*

Name: Zigzag Traverse

Difficulty: Hard Red

Write a function that takes in an n x m two dimensional array (that can be square-shaped when n==m) and return a one-dimensional array of all the array elements in zigzag order.

Zigzag order starts at the top left corner of the two dimensional array, goes down by one, and proceeds in a zigzag pattern all the way to the bottom right corner.

INPUT
array = [
    [1,  3,  4, 10],
    [2,  5,  9, 11],
    [6,  8, 12, 15],
    [7, 13, 14, 16]
]

OUTPUT
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]

*/